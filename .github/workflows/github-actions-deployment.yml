name: Deploy to ECR
on: [push]
jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest
    environment: ex3env
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Login to Public ECR
      uses: docker/login-action@v1
      with: 
        registry: public.ecr.aws
        username: ${{ secrets.AWS_ACCESS_KEY_ID }}
        password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Push to ECR
      env:
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t public.ecr.aws/a2o6r0l6/chrisou:$IMAGE_TAG .
        docker build -t public.ecr.aws/a2o6r0l6/chrisou:latest .
        docker push --all-tags public.ecr.aws/a2o6r0l6/chrisou

        

  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   environment: ex3env
  #   permissions:
  #     id-token: write
  #     contents: read
  #   steps:            
  #     - name: Deploy to App Runner
  #       id: deploy-apprunner
  #       uses: awslabs/amazon-app-runner-deploy@main # Deploy app runner service
  #       with:
  #         service: app-runner-git-deploy-service
  #         #source-connection-arn: ${{ secrets.AWS_CONNECTION_SOURCE_ARN }}
  #         repo: https://github.com/${{ github.repository }}
  #         branch: ${{ github.ref }}
  #         runtime: NODEJS_12
  #         build-command: npm install
  #         start-command: npm start
  #         port: 18000
  #         region: ${{ secrets.AWS_REGION }}
  #         cpu : 1
  #         memory : 2
  #         wait-for-service-stability: true
      
  #     - name: App Runner output
  #       run: echo "App runner output ${{ steps.deploy-apprunner.outputs.service-id }}" 

